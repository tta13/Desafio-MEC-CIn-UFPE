Atividade 3) O algoritmo A* pode ser visto como uma extensão do algoritmo de Djikstra. Ele modifica Djikstra utilizando uma heurística que estima a distância de qualquer nó ao nó final(destino) e na hora de realizar a busca, o algoritmo decide qual nó visitar primeiro a partir da soma entre a distância real percorrida e a distância estimada daquele nó para o final. Além disso a busca acaba quando o nó destino estiver no topo da pilha de prioridade, contudo, diferente do algoritmo de Djisktra, a distância real para todos os nós não precisa ser verificada. O algoritmo A* não pode ser considerado guloso, pois ele leva em consideração na escolha do próximo nó a distância já viajada e não apenas a estimativa heurística. A* pode ser utilizado em jogos os quais chegar do ponto A ao ponto B da maneira mais rápida é importante, jogos de estratégia e tática como 'Warcraft III' ou jogos mais simples como 'Snakes and Ladders'. O caso ótimo para o A* acontece quando o espaço é uma árvore, há apenas um destino e a função heurística é ótima, já o pior caso se dá quando o espaço é infinito e o destino não é alcançável a partir do nó inicial, desta forma, o algoritmo não termina. 

Atividade 4) Tudo depende de como é feito o jogo e que tipos de recompensa seriam oferecidos. Para recompensas pequenas, eu usaria um timer para garantir a oferta periódica de recompensas aos jogadores (diárias, semanais ou outras). Além disso, também seria possível oferecer recompensas um pouco melhores em grandes eventos (por exemplo: Natal, Halloween, Ano Novo, Aniversário do Jogo) como itens raros ou limitados, descontos em produtos do jogo e até missões mais simples para que os jogadores pudessem realizá-las mais rapidamente e obter prêmios. E, finalmente, as melhores recompensas, as mais valiosas, podem ser entregues quando o usuário completar algumas missões como 1000 horas jogadas, 100 partidas completas, 1º lugar geral em determinada competição, etc.